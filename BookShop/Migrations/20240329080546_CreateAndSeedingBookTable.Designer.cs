// <auto-generated />
using BookShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240329080546_CreateAndSeedingBookTable")]
    partial class CreateAndSeedingBookTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookShop.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Microsoft",
                            CategoryId = 1,
                            Description = "Hello",
                            Price = 10.0,
                            Title = "C# Programming"
                        },
                        new
                        {
                            Id = 2,
                            Author = "BTEC",
                            CategoryId = 2,
                            Description = "Learning Harder",
                            Price = 11.0,
                            Title = "Advanced Programming"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Sun",
                            CategoryId = 3,
                            Description = "Basic language",
                            Price = 15.0,
                            Title = "Java Programming"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Greenwich",
                            CategoryId = 1,
                            Description = "Really not easy",
                            Price = 20.0,
                            Title = "Data Structures"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Microsoft",
                            CategoryId = 2,
                            Description = "Now",
                            Price = 10.0,
                            Title = "App Dev"
                        });
                });

            modelBuilder.Entity("BookShop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "So funny",
                            DisplayOrder = 0,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 2,
                            Description = "So romantic",
                            DisplayOrder = 0,
                            Name = "Roman"
                        },
                        new
                        {
                            Id = 3,
                            Description = "So scary",
                            DisplayOrder = 0,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 4,
                            Description = "So Boring",
                            DisplayOrder = 0,
                            Name = "Science"
                        });
                });

            modelBuilder.Entity("BookShop.Models.Book", b =>
                {
                    b.HasOne("BookShop.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
